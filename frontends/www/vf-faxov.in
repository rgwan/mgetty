#!@PERL@
#
# vf-faxov.cgi - generates a page with links to single faxpages
#                it is generated for faxes with many pages,
#		 the values are scalable in %maxpages in
#		 viewfax.cgi (bzw www-gui.conf)
#		 syntax of %maxpages:
#		 %maxpages = ( 30 => 10, 60 => 5, 100 => 1 );
#		 means: 30% more than 10 pages vf-faxov.cgi,
#			60%            5
#		       100%            1 page
# 
# Copyright 1998 Simone Demmel simone@greenie.net
#
# RCS: $Id: vf-faxov.in,v 1.1 1998/10/13 15:56:58 gert Exp $
#
# $Log: vf-faxov.in,v $
# Revision 1.1  1998/10/13 15:56:58  gert
# overview for many-paged faxes
#
#

#
# Script zur Generierung einer Ueberblicksseite bei Faxen mit
# grosser Anz. v. Seiten
#

#
# Aufgabe:
# - Seite generieren mit allen noetigen Links...
#

#
# Variablen 
#

# read configuration file
require "@CONFDIR@/wwwgui.conf";

# default-size if no size is given
$defaultsize=100;

#
# Ende Variablen
#

#
# Pufferungen unterbinden
#
# $|=1;

#
# kein nph-Teil...
#
print "Content-Type: text/html\n\n";

if ($ENV{'REQUEST_METHOD'} eq "GET")
{
  $query_string=$ENV{'QUERY_STRING'};
}
elsif (($ENV{'REQUEST_METHOD'} eq "POST") &&
       ($ENV{'CONTENT_TYPE'} eq "application/x-www-form-urlencoded"))
{
  read(STDIN,$query_string,$ENV{'CONTENT_LENGTH'});
}
else
{
  $query_string='';
};

# Auswerten der Argumentzeilen
%args=();
foreach (split(/\&/,$query_string))
{
	if ( /^(\w+)=/ && ($key=$1) && ($value=$') )
	{
		$value =~ s/\%([0-9a-f]{2})/pack(C,hex($1))/eig;
		$args{"$key"}=$args{"$key"} . " " . $value if ($value!~/^\s*$/);
		$args{"$key"} =~ s/^\s*//o;
	}
}

#
# jetzt haben wir $args{file} und $args{size}
# und vielleicht ein $args{page} fuer eine gezielte Seite
# 
# $page gibt an, welche Seite, wenns leer ist, alles ausgeben...
#
if (defined $args{file}) 
	{ $file = $args{file};
	  # $file =~ s/\%2B/\+/g;
	}
   # im echten Betrieb noetig, beim Testen willich das so nicht
   # else { print "undefined Filename\n"; exit; }
   else { print "undefined Filename\n"; }
if (defined $args{size}) { $size = $args{size};}
                    else { $size = $defaultsize; }
if (defined ($args{page})) { $page = sprintf "%02d", $args{page}; }
		   # im echten Betrieb mal sehen...
		   # else { $page = ""; }
		   else { $page = "alle"; }

#
# in $file ist der komplette Filename, ohne Seitenangabe
# $size ist eine bel. Zahl zwischen 0 und 100 (Prozentwert)
#

print <<EOF;
<html>
<head><title>Fax-Overview: $file</title></head>
<body bgcolor="#ffffff">
$www_logo

Filename: $file<br>
<br clear="all"><hr>
<p>

EOF

#
# 1. herausfinden, welche Seiten zu machen sind -> $page
#
# $fax_incoming - incoming-Directory
# $file - kompletter Filename ohne .$page
# $page - Seitennummer im 2-stelligen Format
# aufzurufen - nph-vf-gif.cgi?size=20&file=fn23445&page=02
#

my $match = $file;
$match =~ s/([+*.?])/\\\1/g;

# incoming-Directory lesen
# print "<p>bin im else...<br>";
opendir DIR, $fax_incoming || print "cannot open incomingdir $incoming\n";
# print "habe $fax_incoming geoeffnet...<br>\n";
foreach $DATEI ( readdir DIR )
{
    # print "<br>\n   lese $DATEI ... vergleiche mit $match";
    if ($DATEI =~ /^$match\.(\d+)$/)
    {
        my $pagenumber=$1;
        print "<br><a href=\"nph-vf-gif.cgi?size=$size\&file=$file\&page=$pagenumber\">Seite $pagenumber</a>\n";
    }
    # print "<br>\n nach IF";
}
closedir (DIR);
# print "<br>\n nach DIR<br>\n";

print <<EOF;

</body>
</html>
EOF

exit 0;
